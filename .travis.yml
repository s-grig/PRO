os:
  - linux
  #- osx

language: cpp

dist: bionic

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
      - sourceline: "ppa:beineri/opt-qt-5.14.1-bionic"
      
    packages:
      - gcc-7
      - g++-7
      - clang
      #- qt514-meta-minimal
      #- qt514svg
      #- qt514imageformats
      #- qt514tools
      #- tesseract-ocr
     
env:
   
  #- TARGET_CPU=amd64 BUILD_CONFIGURATION=Debug
  - TARGET_CPU=amd64 BUILD_CONFIGURATION=Release
  #- TARGET_CPU=x86 BUILD_CONFIGURATION=Debug
  - TARGET_CPU=x86 BUILD_CONFIGURATION=Release      
  
before_install:
  - sudo apt-get update -qq
  

script:
  - echo "$HOME"
  # Check versions of gcc, g++ and cmake
  - gcc -v && g++ -v && cmake --version
  # Run your build commands next
  - echo $PATH
 #################### Qt5 #####################
  #- sudo add-apt-repository --yes ppa:ubuntu-sdk-team/ppa
  - sudo apt-get update
  - sudo apt-get install libqt5webkit5-dev qtdeclarative5-dev -y
  - export QMAKE=/usr/lib/x86_64-linux-gnu/qt5/bin/qmake
      # #- pkg-config --cflags --libs tesseract
  - sudo apt install qt5-default
  - sudo apt-get install libgtk2.0-dev -y
  

    #- sudo apt update sudo apt install tesseract-ocr

  - sudo apt-get install autoconf automake libtool
   #- sudo apt-get install pkg-config
  - sudo apt-get install libpng-dev
  - sudo apt-get install libjpeg8-dev
  - sudo apt-get install libtiff5-dev
  - sudo apt-get install zlib1g-dev
  - sudo apt-get install libtool-bin
    #################### SFML #####################
  - sudo apt-get install libx11-dev libgl1-mesa-dev 
  - sudo apt-get install libudev-dev libfreetype6-dev 
  - sudo apt-get install libopenal-dev libflac-dev libvorbis-dev
  - sudo aptitude install x11-xserver-utils -y
  - sudo apt install libavcodec-dev libavformat-dev libswscale-dev -y
  - sudo apt-get install xorg-dev -y
##################################################
######## leptonica ###############################
  #- sudo apt-get install libleptonica-dev
  - sudo apt-get install xzgv
  ######## tesseract ###############################
  - sudo apt-get install libicu-dev
  - sudo apt-get install libpango1.0-dev
  - sudo apt-get install libcairo2-dev



  #- sudo apt-get install tesseract-ocr-dev
 # - sudo apt install libtesseract-dev
 
  - ls
    
  # - git clone https://github.com/microsoft/vcpkg
  #  - cd vcpkg
  # - wget https://stasg.ru/tv/vcpkg-export-20201130-003734.zip
  # - unzip vcpkg-export-20201130-003734.zip

  # - ./vcpkg/bootstrap-vcpkg.sh
  # - cd vcpkg 
  # - ./vcpkg list
  # - ./vcpkg install sfml tesseract 
  # - ./vcpkg install qt5-imageformats
  # - ./vcpkg list
  #  - cd ..

  #- cd home/travis/build/s-grig/projekt
  ################################### SFML #################################################
  - mkdir sfml
  - cd sfml
  - wget https://www.sfml-dev.org/files/SFML-2.5.1-sources.zip
  - unzip SFML-2.5.1-sources.zip
  - cd SFML-2.5.1
  - cmake -DCMAKE_BUILD_TYPE=release -DBUILD_STATIC_LIBS=ON -DBUILD_SHARED_LIBS=ON -DARCHIVE_INSTALL_DIR=. -G "Unix Makefiles"
  - sudo make && sudo make install
  - cd ..
  - cd ..
  - ls
  ################################### leptonica #################################################
  - wget https://github.com/DanBloomberg/leptonica/releases/download/1.80.0/leptonica-1.80.0.tar.gz
  - tar xzf leptonica-1.80.0.tar.gz
    # tar xzvf
  - cd leptonica-1.80.0
  - autoreconf --install --force
  #- ./autobuild
  - ./configure
  - ./make-for-local
  - ./make-for-auto
  - sudo make
  - sudo make install
  ##################################
  - LD_LIBRARY_PATH=LD_LIBRARY_PATH:usr/local/lib
  - sudo ldconfig
  #- sudo make check
  - cd ..
  - ls
  - echo $LD_LIBRARY_PATH
 ################################### tesseract #################################################
  #- sudo apt-get install tesseract-ocr
  #- sudo apt install libtesseract-dev
  - git clone https://github.com/tesseract-ocr/tesseract.git
  
  ##- cd tesseract/
  ##- ./autogen.sh
  ##- ./configure --with-extra-libraries=/usr/local/lib
  - cd tesseract
  #- LDFLAGS="-L/usr/local/lib" CFLAGS="-I/usr/local/include" make
  #- export LIBLEPT_HEADERSDIR=/usr/local/include 
  #- ./configure --with-extra-libraries=/usr/local/lib
  - mkdir build
  - cd build
  - cmake ../
  - sudo make
  - sudo make install
  - sudo ldconfig
  #- sudo make training
  #- sudo make training-install
  - cd ..
  
  ###- ./autogen.sh
  #- export LIBLEPT_HEADERSDIR=/local/include
  #- ./configure --with-extra-libraries=/local/lib
  #- LIBLEPT_HEADERSDIR=/usr/local/include ./configure --prefix=/usr/local/ --with-extra-libraries=/usr/local/lib
  #- make install
  ###- autoreconf --install --force
  ###- ./configure
  ###- sudo make install
  ###- make training
  ###- sudo make training-install
  - cd ..
  ##- cd ..
 
 # - export TESSERACT_VERSION=4.1.0-1
 # - export TESSERACT_INSTALL=$HOME/build/s-grig/PRO/tesseract
 # - export TESSERACT_PKG=$TESSERACT_INSTALL/lib/pkgconfig
 # - export LD_LIBRARY_PATH=$TESSERACT_INSTALL/lib:$LD_LIBRARY_PATH
 # - export PKG_CONFIG_PATH=$TESSERACT_PKG:$PKG_CONFIG_PATH
 # - wget -O - https://github.com/nijel/tesseract-ocr-build/releases/download/$TESSERACT_VERSION/tesseract.tar.xz | tar -C $HOME/build/s-grig/PRO -xJf -
  - ls $HOME/build/s-grig/PRO/tesseract
  - ls $HOME/build/s-grig/PRO/tesseract/cmake
  - ls $HOME/build/s-grig/PRO/tesseract/tesseract/cmake  /usr/local/lib/cmake/tesseract
  - ls /usr/local/lib/cmake/tesseract
  - tesseract --version

  #  "-DCMAKE_PREFIX_PATH=/home/travis/build/s-grig/PRO/tesseract/cmake"
  - sudo find / -name  "*onfig.cmake" -print 2>/dev/null
  - sudo find  / -name "TesseractConfig.cmake" -print 2>/dev/null
  - sudo find  / -name "tesseract*" -print 2>/dev/null
  - sudo find / -name  "*Targets.cmake" -print 2>/dev/null
  #- ls /usr/local/share/leptonica/lept*   
  - ls /usr/local/share/tesseract
  - ls /usr/local/lib
  #- -I/usr/local/include/tesseract -ltesseract
  #- pkg-config --cflags --libs tesseract
   #Вы можете проверить все переменные окружения, используя команду printenv:
   # - printenv
  #- pkg-config --cflags --libs tesseract
   #- cmake .. "-DCMAKE_PREFIX_PATH=/home/travis/build/s-grig/PRO/tesseract/cmake/templates/"
   # "-DCMAKE_PREFIX_PATH=/home/travis/build/s-grig/PRO/tesseract/"
   # cmake -Draspicam_DIR=<dir>
   #  "-DTesseract_DIR=/home/travis/build/s-grig/PRO/tesseract"
   ##  cmake -DTesseract_DIR=/home/travis/build/s-grig/projekt/leptonica-1.80.0/tesseract_s/tesseract/cmake/templates
  - echo $LD_LIBRARY_PATH
  - echo $LDFLAGS
  - echo $CFLAGS
  - echo $LIBLEPT_HEADERSDIR
  #         -DCMAKE_PREFIX_PATH=/usr/local/lib/cmake
   #- cmake -DTesseract_DIR=/home/travis/build/s-grig/PRO/tesseract -DCMAKE_PREFIX_PATH=/usr/local/lib/cmake ../
  - mkdir build && cd build
  #- export TESSERACT_DIR=/home/travis/build/s-grig/PRO/tesseract
  #- export TESSDATA_PREFIX=/home/travis/build/s-grig/PRO/tesseract/tessdata
  # -DCMAKE_PREFIX_PATH=/usr/local/lib/cmake ../ 
  - cmake .. 
  - cmake --build . --config Release
  - echo "Main application testing is done"